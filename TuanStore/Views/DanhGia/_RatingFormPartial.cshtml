@using Microsoft.AspNet.Identity
@model TuanStore.Models.DanhGiaSP
<script>function test1()
    {
        $('html, body').animate({
            scrollTop: $("#rate").offset().top
        }, 500);
        $('#HoTenDanhGia').val('');
        $('#NoiDungDanhGia').val('');
        $('#EmailDanhGia').val('');
        $('#name_rate').text('');
        // load star in list rate when send rating
        if ($('.star').length > 0) {
            $('.star').each(function () {
                var $star = $(this);
                $star.raty({
                    readOnly: true,
                    starOff: 'images/icon/star-none.png',
                    starOn: 'images/icon/star.png',
                    path: document.location.origin,
                    space: false,
                    score: function () {
                        return $(this).attr('data-score');
                    }
                });
            });
        }
        // remove star when send rating
        if ($('.star-big').length > 0) {
            $('.star-big').each(function () {
                var $star = $(this);
                $star.raty({
                    readOnly: true,
                    starOff: 'images/icon/star-none.png',
                    starOn: 'images/icon/star.png',
                    path: document.location.origin,
                    space: false,
                    score: function () {
                        return $(this).attr('data-score');
                    }
                });
            });
        }
    }
    
    function checkValid() {
        var comment = $('#NoiDungDanhGia').val();
        if (comment.length < 10) {
            $('#text-valid').text('Ðánh giá phải có ít nhất 10 ký tự!');
            $('#text-valid').show();
            return false;
        }
        else {
            var isvalid = true;
            $.ajax({
                async: false,
                url: "http://localhost:9874/approval",
                type: "post",
                dataType: 'text',
                data: {
                    Comment: comment
                },
                success: function (result) {
                    if (result == 0) {
                        $('#text-valid').text('Ðánh giá của bạn không hợp lệ!');
                        $('#text-valid').show();
                        isvalid = false;
                    }
                }
            });
            return isvalid;
        }
    }
    $(document).ready(function () {
        $('#NoiDungDanhGia').on('input', function () {
            if ($('#NoiDungDanhGia').val() == "") {
                $('#name_rate').html('')
            }
            $('#text-valid').hide();
            var comment = $('#NoiDungDanhGia').val();
            if (comment.length > 3) {
                var result = $("input[name='Rate']").val()
                if (result == 1) {
                    $('#name_rate').html('Không Tốt')
                }
                else if (result == 2) {
                    $('#name_rate').html('Trung Bình Khá')
                } else if (result == 3) {
                    $('#name_rate').html('Trung Bình')
                } else if (result == 4) {
                    $('#name_rate').html('Tốt')
                } else if (result == 5) {
                    $('#name_rate').html('Rất Tốt')
                }
                else $('#name_rate').html('')
            } else {
                $('#name_rate').html('');
            }    
        });
    })

    </script>
    
<h2>Viết đánh giá <img src="~/images/icon/writerate.png" width="25" alt="Alternate Text" /></h2>
@using (Ajax.BeginForm("AddDanhGia", "DanhGia", null, new AjaxOptions { OnBegin = "checkValid", UpdateTargetId = "rates", OnSuccess = "test1" }, new { @id = "contact-form", @class = "contact-form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MaSP, new { htmlAttributes = new { @class = "le-input" } })
    <div class="row field-row">
        @if (!Request.IsAuthenticated)
        {
            <div class="col-xs-12 col-sm-6">
                @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @id = "HoTenDanhGia", @class = "le-input", placeholder = "Họ tên của bạn" } })
                @Html.ValidationMessageFor(model => model.HoTen, "", new {  @class = "text-danger" })
            </div>
            <div class="col-xs-12 col-sm-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "EmailDanhGia", @class = "le-input", placeholder = "Email của bạn" } })
                @Html.ValidationMessageFor(model => model.Email, "", new {  @class = "text-danger" })
            </div>
        }
        else
        {
            <div class="col-xs-12 col-sm-6">
                <label class="h4" style="color: maroon">Xin chào : @ViewBag.Name</label>
            </div>
        }
    </div>
    
    <div class="field-row">
        <label>Đánh giá sản phẩm </label>
        <p style="margin-bottom:10px">Đánh giá của bạn sẽ được tự đánh giá sao theo tiêu chuẩn đã được học từ trước khi bạn gõ . Nhưng nếu bạn muốn sửa đổi nó bạn có thể tích vào nó để chọn số sao của bạn.</p>
        <div class="star-holder col-lg-9 no-padding">
            <div class="star-big inline" data-score="" style="width : 150px !important"></div>
            <span id="name_rate" class="h4 inline" style="font-weight: bold"></span>
        </div>
        @Html.HiddenFor(model => model.Rate, new { @id = "RateDanhGia", @class = "le-input", @rows = "1"})

        @Html.TextAreaFor(model => model.NoiDung, new { @id = "NoiDungDanhGia", @class = "le-input", @rows = "8", placeholder = "Nhập đánh giá sản phẩm " })
        @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
        <p class="text-danger" id="text-valid"></p>
    </div><!-- /.field-row -->
    <div class="buttons-holder">
        <button type="submit" class="le-button huge" formmethod="post"><img src="~/images/icon/send.png" width="30" id="sendDG"/> Gửi</button>
    </div><!-- /.buttons-holder -->
}
